kind: Service
apiVersion: v1
metadata:
  name: kafka-connect
  labels:
    app: kafka-connect
spec:
  ports:
    - port: 8083
      name: rest
  clusterIP: None
  selector:
    app: kafka-connect
---
kind: Deployment
apiVersion: apps/v1beta1
metadata:
  name: kafka-connect
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: kafka-connect
    spec:
      containers:
      - name: kafka-connect
        image: registry.zing.zenoss.eng/zenosszing/zing-kafkaconnect:a468ec19
        env:
          - name: CONNECT_BOOTSTRAP_SERVERS
            value: kafka:9092
          - name: CONNECT_CONFIG_STORAGE_TOPIC
            value: _databus-connect-configs
          - name: CONNECT_GROUP_ID
            value: databus-connect
          - name: CONNECT_INTERNAL_KEY_CONVERTER
            value: org.apache.kafka.connect.json.JsonConverter
          - name: CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE
            value: "false"
          - name: CONNECT_INTERNAL_VALUE_CONVERTER
            value: org.apache.kafka.connect.json.JsonConverter
          - name: CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE
            value: "false"
          - name: CONNECT_KEY_CONVERTER
            value: io.confluent.connect.avro.AvroConverter
          - name: CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL
            value: http://kafka-schema-registry:8081
          - name: CONNECT_OFFSET_STORAGE_TOPIC
            value: _databus-connect-offsets
          - name: CONNECT_REST_ADVERTISED_HOST_NAME
            value: kafka-connect
          - name: CONNECT_REST_PORT
            value: '8083'
          - name: CONNECT_STATUS_STORAGE_TOPIC
            value: _databus-connect-status
          - name: CONNECT_VALUE_CONVERTER
            value: io.confluent.connect.avro.AvroConverter
          - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
            value: http://kafka-schema-registry:8081
        ports:
        - containerPort: 8083
          name: rest
